{"ast":null,"code":"var _jsxFileName = \"/Users/ivorylove/Documents/Code/blackjack-emulator/Frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useSpring, useSprings, animated } from 'react-spring';\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const suits = [\"Hearts\", \"Diamonds\", \"Clubs\", \"Spades\"];\n  const ranks = [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"Jack\", \"Queen\", \"King\", \"Ace\"];\n  const [deck, setDeck] = useState([]);\n  const [playerHand, setPlayerHand] = useState([]);\n  const [dealerHand, setDealerHand] = useState([]);\n  const [dealerVisible, setDealerVisible] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n  const [playerWon, setPlayerWon] = useState(null);\n  const [chipCount, setChipCount] = useState(1000); // New state for chip count\n  const [currentBet, setCurrentBet] = useState(0); // New state for current bet\n  const [pendingBet, setPendingBet] = useState(0); // New state for the pending bet\n\n  // Initialize the deck\n  useState(() => {\n    setDeck(createDeck());\n  }, []);\n  const [playerSprings, api] = useSprings(playerHand.length, index => ({\n    from: {\n      transform: 'translateX(-100px)',\n      opacity: 0\n    },\n    to: {\n      transform: 'translateX(0)',\n      opacity: 1\n    },\n    delay: index * 100\n  }), [playerHand.length]);\n\n  // Function to handle bet placement\n  function placeBet(amount) {\n    if (amount <= chipCount && amount > 0) {\n      setCurrentBet(amount);\n    } else {\n      alert(\"Invalid bet amount.\");\n    }\n  }\n  function createDeck() {\n    let newDeck = [];\n    for (let suit of suits) {\n      for (let rank of ranks) {\n        newDeck.push({\n          suit,\n          rank,\n          value: getValue(rank),\n          image: `/PNG-cards-1.3/${rank.toLowerCase()}_of_${suit.toLowerCase()}.png`\n        });\n      }\n    }\n    return shuffle(newDeck); // Assuming you have a shuffle function defined or will define it\n  }\n\n  // Define the shuffle function if not already defined\n  function shuffle(deck) {\n    for (let i = deck.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [deck[i], deck[j]] = [deck[j], deck[i]]; // Swap\n    }\n    return deck;\n  }\n\n  // Define the getValue function to determine the value of each card\n  function getValue(rank) {\n    if ([\"Jack\", \"Queen\", \"King\"].includes(rank)) {\n      return 10;\n    } else if (rank === \"Ace\") {\n      return 11; // Aces can be 1 or 11, but we'll start with 11\n    } else {\n      return parseInt(rank);\n    }\n  }\n\n  // Your useState call to initialize the deck\n  useState(() => {\n    setDeck(createDeck());\n  }, []);\n  function startGame() {\n    setChipCount(1000); // Reset chip count to 1000\n    deal(); // Start a new game\n  }\n  function deal() {\n    if (currentBet === 0) {\n      alert(\"Please place a bet.\");\n      return;\n    }\n    const newDeck = createDeck();\n    const playerInitialHand = [newDeck.pop(), newDeck.pop()];\n    const dealerInitialHand = [newDeck.pop(), newDeck.pop()];\n    setDeck(newDeck);\n    setPlayerHand(playerInitialHand);\n    setDealerHand(dealerInitialHand);\n    setDealerVisible(false);\n    setGameOver(false);\n    setPlayerWon(null);\n  }\n  function hit() {\n    if (!gameOver && currentBet > 0) {\n      const newDeck = [...deck];\n      const newPlayerHand = [...playerHand, newDeck.pop()];\n      setDeck(newDeck);\n      setPlayerHand(newPlayerHand);\n      if (getHandValue(newPlayerHand) > 21) {\n        setGameOver(true);\n        setPlayerWon(false);\n        // Player busts, loses bet\n        setChipCount(chipCount - currentBet);\n      }\n    }\n  }\n  function stand() {\n    if (currentBet > 0) {\n      let newDealerHand = [...dealerHand];\n      const newDeck = [...deck];\n      setDealerVisible(true);\n      let dealerHandValue = getHandValue(newDealerHand);\n      while (dealerHandValue < 17) {\n        newDealerHand.push(newDeck.pop());\n        dealerHandValue = getHandValue(newDealerHand);\n      }\n      setDeck(newDeck);\n      setDealerHand(newDealerHand);\n      const playerScore = getHandValue(playerHand);\n      const dealerScore = dealerHandValue;\n      if (dealerScore > 21 || playerScore > dealerScore) {\n        setPlayerWon(true);\n        setChipCount(chipCount + currentBet * 2); // Player wins, doubles the bet\n      } else if (playerScore < dealerScore) {\n        setPlayerWon(false);\n        setChipCount(chipCount - currentBet); // Player loses the bet\n      } else {\n        setPlayerWon(null); // It's a tie, bet is returned, so no change in chip count\n      }\n      setGameOver(true);\n    } else {\n      alert(\"Please place a bet before standing.\");\n    }\n  }\n  function getHandValue(hand) {\n    let value = hand.reduce((acc, card) => acc + card.value, 0);\n    let aces = hand.filter(card => card.rank === \"Ace\").length;\n    while (value > 21 && aces > 0) {\n      value -= 10; // Adjust for Ace\n      aces -= 1;\n    }\n    return value;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Blackjack\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: startGame,\n            style: {\n              marginRight: '10px'\n            },\n            children: \"Reset Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: deal,\n            disabled: currentBet <= 0,\n            children: \"Deal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chip-count\",\n          children: [\"Chips: \", chipCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"betting-controls\",\n        style: {\n          marginTop: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: currentBet,\n          onChange: e => placeBet(parseInt(e.target.value)),\n          placeholder: \"Place your bet\",\n          style: {\n            marginRight: '10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deal(),\n          children: \"Place Bet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hand\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Player's Hand (\", getHandValue(playerHand), \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cards\",\n          children: playerSprings.map((styles, index) => /*#__PURE__*/_jsxDEV(animated.div, {\n            style: styles,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: playerHand[index].image,\n              alt: `${playerHand[index].rank} of ${playerHand[index].suit}`,\n              style: {\n                width: '100px',\n                height: 'auto',\n                marginRight: '5px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), !gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: hit,\n            style: {\n              marginRight: '10px'\n            },\n            children: \"Hit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: stand,\n            children: \"Stand\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hand\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Dealer's Hand (\", dealerVisible ? getHandValue(dealerHand) : '?', \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cards\",\n          children: dealerHand.map((card, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n            src: dealerVisible || index === 0 ? card.image : \"/PNG-cards-1.3/cardback.png\",\n            alt: dealerVisible || index === 0 ? `${card.rank} of ${card.suit}` : \"Hidden Card\",\n            style: {\n              width: '100px',\n              height: 'auto',\n              marginRight: '5px'\n            }\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"outcome\",\n        style: {\n          marginTop: '20px'\n        },\n        children: [playerWon === true && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"You won!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 36\n        }, this), playerWon === false && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"You lost!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 37\n        }, this), playerWon === null && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"It's a tie!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"QIqqtxQWVn+EEHvjWjahDGZc11g=\", false, function () {\n  return [useSprings];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useSpring","useSprings","animated","jsxDEV","_jsxDEV","App","_s","suits","ranks","deck","setDeck","playerHand","setPlayerHand","dealerHand","setDealerHand","dealerVisible","setDealerVisible","gameOver","setGameOver","playerWon","setPlayerWon","chipCount","setChipCount","currentBet","setCurrentBet","pendingBet","setPendingBet","createDeck","playerSprings","api","length","index","from","transform","opacity","to","delay","placeBet","amount","alert","newDeck","suit","rank","push","value","getValue","image","toLowerCase","shuffle","i","j","Math","floor","random","includes","parseInt","startGame","deal","playerInitialHand","pop","dealerInitialHand","hit","newPlayerHand","getHandValue","stand","newDealerHand","dealerHandValue","playerScore","dealerScore","hand","reduce","acc","card","aces","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","justifyContent","alignItems","width","onClick","marginRight","disabled","marginTop","type","onChange","e","target","placeholder","map","styles","div","src","alt","height","_c","$RefreshReg$"],"sources":["/Users/ivorylove/Documents/Code/blackjack-emulator/Frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useSpring, useSprings, animated } from 'react-spring';\nimport \"./App.css\";\n\nfunction App() {\n  const suits = [\"Hearts\", \"Diamonds\", \"Clubs\", \"Spades\"];\n  const ranks = [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"Jack\", \"Queen\", \"King\", \"Ace\"];\n\n  const [deck, setDeck] = useState([]);\n  const [playerHand, setPlayerHand] = useState([]);\n  const [dealerHand, setDealerHand] = useState([]);\n  const [dealerVisible, setDealerVisible] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n  const [playerWon, setPlayerWon] = useState(null);\n  const [chipCount, setChipCount] = useState(1000); // New state for chip count\n  const [currentBet, setCurrentBet] = useState(0); // New state for current bet\n  const [pendingBet, setPendingBet] = useState(0); // New state for the pending bet\n\n  // Initialize the deck\n  useState(() => {\n    setDeck(createDeck());\n  }, []);\n\n  const [playerSprings, api] = useSprings(playerHand.length, index => ({\n    from: { transform: 'translateX(-100px)', opacity: 0 },\n    to: { transform: 'translateX(0)', opacity: 1 },\n    delay: index * 100,\n  }), [playerHand.length]);\n\n  // Function to handle bet placement\n  function placeBet(amount) {\n    if (amount <= chipCount && amount > 0) {\n      setCurrentBet(amount);\n    } else {\n      alert(\"Invalid bet amount.\");\n    }\n  }\n\n  function createDeck() {\n    let newDeck = [];\n    for (let suit of suits) {\n      for (let rank of ranks) {\n        newDeck.push({\n          suit,\n          rank,\n          value: getValue(rank),\n          image: `/PNG-cards-1.3/${rank.toLowerCase()}_of_${suit.toLowerCase()}.png`,\n        });\n      }\n    }\n    return shuffle(newDeck); // Assuming you have a shuffle function defined or will define it\n  }\n\n  // Define the shuffle function if not already defined\n  function shuffle(deck) {\n    for (let i = deck.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [deck[i], deck[j]] = [deck[j], deck[i]]; // Swap\n    }\n    return deck;\n  }\n\n  // Define the getValue function to determine the value of each card\n  function getValue(rank) {\n    if ([\"Jack\", \"Queen\", \"King\"].includes(rank)) {\n      return 10;\n    } else if (rank === \"Ace\") {\n      return 11; // Aces can be 1 or 11, but we'll start with 11\n    } else {\n      return parseInt(rank);\n    }\n  }\n\n  // Your useState call to initialize the deck\n  useState(() => {\n    setDeck(createDeck());\n  }, []);\n\n  function startGame() {\n    setChipCount(1000); // Reset chip count to 1000\n    deal(); // Start a new game\n  }\n\n  function deal() {\n    if (currentBet === 0) {\n      alert(\"Please place a bet.\");\n      return;\n    }\n\n    const newDeck = createDeck();\n    const playerInitialHand = [newDeck.pop(), newDeck.pop()];\n    const dealerInitialHand = [newDeck.pop(), newDeck.pop()];\n\n    setDeck(newDeck);\n    setPlayerHand(playerInitialHand);\n    setDealerHand(dealerInitialHand);\n    setDealerVisible(false);\n    setGameOver(false);\n    setPlayerWon(null);\n  }\n  \n\n  function hit() {\n    if (!gameOver && currentBet > 0) {\n      const newDeck = [...deck];\n      const newPlayerHand = [...playerHand, newDeck.pop()];\n      setDeck(newDeck);\n      setPlayerHand(newPlayerHand);\n  \n      if (getHandValue(newPlayerHand) > 21) {\n        setGameOver(true);\n        setPlayerWon(false);\n        // Player busts, loses bet\n        setChipCount(chipCount - currentBet);\n      }\n    }\n  }\n  \n  function stand() {\n    if (currentBet > 0) {\n      let newDealerHand = [...dealerHand];\n      const newDeck = [...deck];\n      setDealerVisible(true);\n  \n      let dealerHandValue = getHandValue(newDealerHand);\n      while (dealerHandValue < 17) {\n        newDealerHand.push(newDeck.pop());\n        dealerHandValue = getHandValue(newDealerHand);\n      }\n  \n      setDeck(newDeck);\n      setDealerHand(newDealerHand);\n      const playerScore = getHandValue(playerHand);\n      const dealerScore = dealerHandValue;\n  \n      if (dealerScore > 21 || playerScore > dealerScore) {\n        setPlayerWon(true);\n        setChipCount(chipCount + currentBet * 2); // Player wins, doubles the bet\n      } else if (playerScore < dealerScore) {\n        setPlayerWon(false);\n        setChipCount(chipCount - currentBet); // Player loses the bet\n      } else {\n        setPlayerWon(null); // It's a tie, bet is returned, so no change in chip count\n      }\n  \n      setGameOver(true);\n    } else {\n      alert(\"Please place a bet before standing.\");\n    }\n  }\n\n  function getHandValue(hand) {\n    let value = hand.reduce((acc, card) => acc + card.value, 0);\n    let aces = hand.filter((card) => card.rank === \"Ace\").length;\n\n    while (value > 21 && aces > 0) {\n      value -= 10; // Adjust for Ace\n      aces -= 1;\n    }\n\n    return value;\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Blackjack</h1>\n        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', width: '100%' }}>\n          <div>\n            <button onClick={startGame} style={{ marginRight: '10px' }}>Reset Game</button>\n            <button onClick={deal} disabled={currentBet <= 0}>Deal</button>\n          </div>\n          <div className=\"chip-count\">\n            Chips: {chipCount}\n          </div>\n        </div>\n        <div className=\"betting-controls\" style={{ marginTop: '20px' }}>\n          <input\n            type=\"number\"\n            value={currentBet}\n            onChange={(e) => placeBet(parseInt(e.target.value))}\n            placeholder=\"Place your bet\"\n            style={{ marginRight: '10px' }}\n          />\n          <button onClick={() => deal()}>Place Bet</button>\n        </div>\n        <div className=\"hand\">\n          <h2>Player's Hand ({getHandValue(playerHand)})</h2>\n          <div className=\"cards\">\n            {playerSprings.map((styles, index) => (\n              <animated.div style={styles} key={index}>\n                <img\n                  src={playerHand[index].image}\n                  alt={`${playerHand[index].rank} of ${playerHand[index].suit}`}\n                  style={{ width: '100px', height: 'auto', marginRight: '5px' }}\n                />\n              </animated.div>\n            ))}\n          </div>\n          {!gameOver && (\n            <div style={{ marginTop: '20px' }}>\n              <button onClick={hit} style={{ marginRight: '10px' }}>Hit</button>\n              <button onClick={stand}>Stand</button>\n            </div>\n          )}\n        </div>\n        <div className=\"hand\">\n          <h2>Dealer's Hand ({dealerVisible ? getHandValue(dealerHand) : '?'})</h2>\n          <div className=\"cards\">\n            {dealerHand.map((card, index) => (\n              <img\n                key={index}\n                src={dealerVisible || index === 0 ? card.image : \"/PNG-cards-1.3/cardback.png\"}\n                alt={dealerVisible || index === 0 ? `${card.rank} of ${card.suit}` : \"Hidden Card\"}\n                style={{ width: '100px', height: 'auto', marginRight: '5px' }}\n              />\n            ))}\n          </div>\n        </div>\n        {gameOver && (\n          <div className=\"outcome\" style={{ marginTop: '20px' }}>\n            {playerWon === true && <p>You won!</p>}\n            {playerWon === false && <p>You lost!</p>}\n            {playerWon === null && <p>It's a tie!</p>}\n          </div>\n        )}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}